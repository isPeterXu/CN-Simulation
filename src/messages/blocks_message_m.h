//
// Generated file, do not edit! Created by nedtool 5.4 from messages/blocks_message.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __BLOCKS_MESSAGE_M_H
#define __BLOCKS_MESSAGE_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0504
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
    #include "../blockchain/block.h"
    #include "pow_message_m.h"
    #include <vector>
    #include <memory>
    typedef std::vector<Block> blocksVector;
// }}

/**
 * Class generated from <tt>messages/blocks_message.msg:28</tt> by nedtool.
 * <pre>
 * message BlocksMessage extends POWMessage
 * {
 *     blocksVector blocks;
 * }
 * </pre>
 */
class BlocksMessage : public ::POWMessage
{
  protected:
    blocksVector blocks;

  private:
    void copy(const BlocksMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const BlocksMessage&);

  public:
    BlocksMessage(const char *name=nullptr, short kind=0);
    BlocksMessage(const BlocksMessage& other);
    virtual ~BlocksMessage();
    BlocksMessage& operator=(const BlocksMessage& other);
    virtual BlocksMessage *dup() const override {return new BlocksMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual blocksVector& getBlocks();
    virtual const blocksVector& getBlocks() const {return const_cast<BlocksMessage*>(this)->getBlocks();}
    virtual void setBlocks(const blocksVector& blocks);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const BlocksMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, BlocksMessage& obj) {obj.parsimUnpack(b);}


#endif // ifndef __BLOCKS_MESSAGE_M_H

