//
// Generated file, do not edit! Created by nedtool 5.4 from messages/reject_message.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __REJECT_MESSAGE_M_H
#define __REJECT_MESSAGE_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0504
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
    #include "pow_message_m.h"
// }}

/**
 * Class generated from <tt>messages/reject_message.msg:22</tt> by nedtool.
 * <pre>
 * message RejectMessage extends POWMessage
 * {
 *     bool disconnect;
 *     string reason;
 * }
 * </pre>
 */
class RejectMessage : public ::POWMessage
{
  protected:
    bool disconnect;
    ::omnetpp::opp_string reason;

  private:
    void copy(const RejectMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const RejectMessage&);

  public:
    RejectMessage(const char *name=nullptr, short kind=0);
    RejectMessage(const RejectMessage& other);
    virtual ~RejectMessage();
    RejectMessage& operator=(const RejectMessage& other);
    virtual RejectMessage *dup() const override {return new RejectMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual bool getDisconnect() const;
    virtual void setDisconnect(bool disconnect);
    virtual const char * getReason() const;
    virtual void setReason(const char * reason);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const RejectMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, RejectMessage& obj) {obj.parsimUnpack(b);}


#endif // ifndef __REJECT_MESSAGE_M_H

